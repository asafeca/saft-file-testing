import { LineCustomsInformation } from "../../../validations/model/saft/common/LineCustomsInformation";
import { LineOrderReferences } from "../../../validations/model/saft/common/LineOrderReferences";
import { LineProductSerialNumber } from "../../../validations/model/saft/common/LineProductSerialNumber";
import { SaftAddress } from "../../../validations/model/saft/common/SaftAddress";
import { SAFTTaxBase } from "../../../validations/model/saft/common/SAFTTaxBase";
import { MovementOfGoods } from "../../../validations/model/saft/sourcedocuments/movementofgoods/MovementOfGoods";
import { StockMovementBaseAddress } from "../../../validations/model/saft/sourcedocuments/movementofgoods/stockmovement/address/StockMovementBaseAddress";
import { StockMovementLine } from "../../../validations/model/saft/sourcedocuments/movementofgoods/stockmovement/line/StockMovementLine";
import { StockMovement } from "../../../validations/model/saft/sourcedocuments/movementofgoods/stockmovement/StockMovement";
import { StockMovementDocumentStatus } from "../../../validations/model/saft/sourcedocuments/movementofgoods/stockmovement/StockMovementDocumentStatus";

export class MovementOfGoodsMapTOModel {
    private goodsModel = new MovementOfGoods();
    private goodsMap: Map<string, Object>
    constructor(goodsMap: Map<string, Object>) {
        this.goodsMap = goodsMap
    }

    get(): MovementOfGoods {

        const goodsEntries = Object.fromEntries(this.goodsMap)
        const goodsStr = JSON.stringify(goodsEntries)
        this.goodsModel = JSON.parse(goodsStr)

        const stockMovementMapList = this.goodsMap.get('stockMovement') as Array<Map<string, Object>>
        if (typeof (stockMovementMapList) !== 'undefined') {

            let stockMovementList = new Array<StockMovement>()

            stockMovementMapList.forEach(stockItemMap => {
                const stockItemEntries = Object.fromEntries(stockItemMap)
                const stockItemStr = JSON.stringify(stockItemEntries)
                const stockItemModel: StockMovement = JSON.parse(stockItemStr)

                const documentStatusMap = stockItemMap.get('documentStatus') as Map<string, Object>
                if (typeof (documentStatusMap) !== 'undefined') {
                    const statusEntries = Object.fromEntries(documentStatusMap)
                    const statusStr = JSON.stringify(statusEntries)
                    const statusModel: StockMovementDocumentStatus = JSON.parse(statusStr)

                    stockItemModel.documentStatus = statusModel
                }

                const shipToMap = stockItemMap.get('shipTo') as Map<string, Object>
                if (typeof (shipToMap) !== 'undefined') {
                    const shipToEntries = Object.fromEntries(shipToMap)
                    const shipToStr = JSON.stringify(shipToEntries)
                    const shipToModel: StockMovementBaseAddress = JSON.parse(shipToStr)


                    const addressMap = shipToMap.get('address') as Map<string, Object>

                    if (typeof (addressMap) !== 'undefined') {
                        const addressEntries = Object.fromEntries(addressMap)
                        const addressStr = JSON.stringify(addressEntries)
                        const addressModel: SaftAddress = JSON.parse(addressStr)

                        shipToModel.address = addressModel
                    }

                    stockItemModel.shipTo = shipToModel

                }

                const shipFromMap = stockItemMap.get('shipFrom') as Map<string, Object>
                if (typeof (shipFromMap) !== 'undefined') {

                    const shipFromEntries = Object.fromEntries(shipFromMap)
                    const shipFromStr = JSON.stringify(shipFromEntries)
                    const shipFromModel: StockMovementBaseAddress = JSON.parse(shipFromStr)

                    const addressMap = shipFromMap.get('address') as Map<string, Object>

                    if (typeof (addressMap) !== 'undefined') {
                        const addressEntries = Object.fromEntries(addressMap)
                        const addressStr = JSON.stringify(addressEntries)
                        const addressModel: SaftAddress = JSON.parse(addressStr)

                        shipFromModel.address = addressModel
                    }

                    stockItemModel.shipFrom = shipFromModel

                }


                const stockItemLineMapList = stockItemMap.get('line') as Array<Map<string, Object>>

                if (typeof (stockItemLineMapList) !== 'undefined') {

                    let lineModelList = new Array<StockMovementLine>()

                    stockItemLineMapList.forEach(lineMap => {
                        const lineEntries = Object.fromEntries(lineMap)
                        const lineStr = JSON.stringify(lineEntries)
                        let lineModel: StockMovementLine = JSON.parse(lineStr)

                        const orderReferencesMap = lineMap.get('orderReferences') as Map<string, Object>

                        if (typeof (orderReferencesMap) !== 'undefined') {
                            const orderEntries = Object.fromEntries(orderReferencesMap)
                            const orderStr = JSON.stringify(orderEntries)
                            const orderModel: LineOrderReferences = JSON.parse(orderStr)

                            lineModel.orderReferences = orderModel
                        }

                        const productSerialNumberMap = lineMap.get('productSerialNumber') as Map<string, Object>

                        if (typeof (productSerialNumberMap) !== 'undefined') {

                            const productSerialEntries = Object.fromEntries(productSerialNumberMap)
                            const productSerialNumberStr = JSON.stringify(productSerialEntries)
                            const productSerialModel: LineProductSerialNumber = JSON.parse(productSerialNumberStr)

                            lineModel.productSerialNumber = productSerialModel

                        }

                        const taxMap = lineMap.get('tax') as Map<string, Object>

                        if (typeof (taxMap) !== 'undefined') {
                            const taxEntries = Object.fromEntries(taxMap)
                            const taxStr = JSON.stringify(taxEntries)
                            const taxModel: SAFTTaxBase = JSON.parse(taxStr)

                            lineModel.tax = taxModel
                            1
                        }

                        const customsInformationMap = lineMap.get('customsInformation') as Map<string, Object>
                        if (typeof (customsInformationMap) !== 'undefined') {
                            const customsInformationEntries = Object.fromEntries(customsInformationMap)
                            const customsInformationStr = JSON.stringify(customsInformationEntries)
                            const customsInformationModel: LineCustomsInformation = JSON.parse(customsInformationStr)

                            lineModel.customsInformation = customsInformationModel

                        }


                        lineModelList.push(lineModel)
                    })

                    stockItemModel.line = lineModelList


                }

                stockMovementList.push(stockItemModel)
            })

            this.goodsModel.stockMovement = stockMovementList
        }

        return this.goodsModel

    }
}