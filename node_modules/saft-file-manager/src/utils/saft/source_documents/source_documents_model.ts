import { SourceDocuments } from "../../../validations/model/saft/sourcedocuments/sourcedocuments";
import { MovementOfGoodsMapTOModel } from "./movement_of_goods_map_to_model";
import { PaymentsMapToModel } from "./payments_map_to_model";
import { PurchaseInvoicesMapToModel } from "./purchase_invoice_map_model";
import { SalesInvoicesMapToModel } from "./sales_invoices_map_model";
import { WorkingDocumentsMapToModel } from "./working_documents_map_to_model";

export class SourceDocumentsToModel {
    private sourceDocumentsModel = new SourceDocuments()
    private sourceMap = new Map<string, Object>()
    constructor(sourceMap: Map<string, Object>) {

        this.sourceMap = sourceMap
    }


    get(): SourceDocuments {
        const salesInvoicesMap = this.sourceMap.get('salesInvoices') as Map<string, Object>
        const movementOfGoodsMap = this.sourceMap.get('movementOfGoods') as Map<string, Object>
        const workingDocumentsMap = this.sourceMap.get('workingDocuments') as Map<string, Object>
        const paymentsMap = this.sourceMap.get('payments') as Map<string, Object>
        const purchaseInvoicesMap = this.sourceMap.get('purchaseInvoices') as Map<string, Object>

        if (typeof (salesInvoicesMap) !== 'undefined')
            this.sourceDocumentsModel.salesInvoices = new SalesInvoicesMapToModel(salesInvoicesMap).get()
        if (typeof (movementOfGoodsMap) !== 'undefined')
            this.sourceDocumentsModel.movementOfGoods = new MovementOfGoodsMapTOModel(movementOfGoodsMap).get()
        if (typeof (workingDocumentsMap) !== 'undefined')
            this.sourceDocumentsModel.workingDocuments = new WorkingDocumentsMapToModel(workingDocumentsMap).get()
        if (typeof (paymentsMap) !== 'undefined')
            this.sourceDocumentsModel.payments = new PaymentsMapToModel(paymentsMap).get()
        if (typeof (purchaseInvoicesMap) !== 'undefined')
            this.sourceDocumentsModel.purchaseInvoices = new PurchaseInvoicesMapToModel(purchaseInvoicesMap).get()


        return this.sourceDocumentsModel

    }

}



