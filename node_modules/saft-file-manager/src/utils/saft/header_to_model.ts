import { FileModelSAFT } from "../../validations/model/saft/FileModelSAFT"
import { SAFTHeader } from "../../validations/model/saft/header/SAFTHeader"
import { SAFTHeaderCompanyAddress } from "../../validations/model/saft/header/SAFTHeaderCompanyAddress"

export class HeaderToModel {
    private headerMap: Map<string, Object>
    private headerModel = new SAFTHeader()

    constructor({ headerMap }: { headerMap: Map<string, Object> }) {
        this.headerMap = headerMap
    }

    public get(): SAFTHeader {

        let headerEntries = Object.fromEntries(this.headerMap)
        let headerStr = JSON.stringify(headerEntries)
        this.headerModel = JSON.parse(headerStr)

        let addressMap = this.headerMap.get('companyAddress') as Map<string, Object>

        if (typeof (addressMap) !== 'undefined') {

            let addressEntries = Object.fromEntries(addressMap)
            let addressStr = JSON.stringify(addressEntries)
            let addressModel: SAFTHeaderCompanyAddress = JSON.parse(addressStr)
            this.headerModel.companyAddress = addressModel
        }

        return this.headerModel

    }

}