"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.GeneralLedgerEntriesMapToModel = void 0;
const GeneralLedgerEntries_1 = require("../../../validations/model/saft/generalledger/GeneralLedgerEntries");
class GeneralLedgerEntriesMapToModel {
    constructor(generalLedgerEntriesMap) {
        this.generalLedgerEntriesModel = new GeneralLedgerEntries_1.GeneralLedgerEntries();
        this.generalLedgerEntriesMap = generalLedgerEntriesMap;
    }
    get() {
        const generalLedgerEntries = Object.fromEntries(this.generalLedgerEntriesMap);
        const generalLedgerEntriesStr = JSON.stringify(generalLedgerEntries);
        this.generalLedgerEntriesModel = JSON.parse(generalLedgerEntriesStr);
        const journalMapList = this.generalLedgerEntriesMap.get('journal');
        if (typeof (journalMapList) !== 'undefined') {
            let journalList = new Array();
            journalMapList.forEach(journalMap => {
                const journalEntries = Object.fromEntries(journalMap);
                const journalStr = JSON.stringify(journalEntries);
                const journalModel = JSON.parse(journalStr);
                const transactionMapList = journalMap.get('transaction');
                if (typeof (transactionMapList) !== 'undefined') {
                    let transactionModelList = new Array();
                    transactionMapList.forEach(transactionMap => {
                        const transactionEntries = Object.fromEntries(transactionMap);
                        const transactionStr = JSON.stringify(transactionEntries);
                        const transactionModel = JSON.parse(transactionStr);
                        const lineMapList = transactionMap.get('line');
                        if (typeof (lineMapList) !== 'undefined') {
                            let lineModelList = new Array();
                            lineMapList.forEach(lineMap => {
                                const lineEntries = Object.fromEntries(lineMap);
                                const lineStr = JSON.stringify(lineEntries);
                                const lineModel = JSON.parse(lineStr);
                                const debitLineMap = lineMap.get('debitLine');
                                if (typeof (debitLineMap) !== 'undefined') {
                                    const debitLineEntries = Object.fromEntries(debitLineMap);
                                    const debitLineStr = JSON.stringify(debitLineEntries);
                                    const debitLineModel = JSON.parse(debitLineStr);
                                    lineModel.debitLine = debitLineModel;
                                }
                                const creditLineMap = lineMap.get('creditLine');
                                if (typeof (creditLineMap) !== 'undefined') {
                                    const creditLineEntries = Object.fromEntries(creditLineMap);
                                    const creditLineStr = JSON.stringify(creditLineEntries);
                                    const creditLineModel = JSON.parse(creditLineStr);
                                    lineModel.creditLine = creditLineModel;
                                }
                                lineModelList.push(lineModel);
                            });
                            transactionModel.line = lineModelList;
                        }
                        transactionModelList.push(transactionModel);
                    });
                }
                journalList.push(journalModel);
            });
            this.generalLedgerEntriesModel.journal = journalList;
        }
        return this.generalLedgerEntriesModel;
    }
}
exports.GeneralLedgerEntriesMapToModel = GeneralLedgerEntriesMapToModel;
