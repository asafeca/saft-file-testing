"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MasterFilesMapToModel = void 0;
const SAFTMasterFile_1 = require("../../validations/model/saft/masterfiles/SAFTMasterFile");
const TaxTable_1 = require("../../validations/model/saft/masterfiles/taxtable/TaxTable");
class MasterFilesMapToModel {
    constructor({ masterFilesMap }) {
        this.masterFilesModel = new SAFTMasterFile_1.SAFTMasterFile();
        this.masterFilesMap = masterFilesMap;
    }
    get() {
        const generalLedgerAccounts = this.masterFilesMap.get('generalLedgerAccounts');
        const customer = this.masterFilesMap.get('customer');
        const supplier = this.masterFilesMap.get('supplier');
        const product = this.masterFilesMap.get('product');
        const taxTable = this.masterFilesMap.get('taxTable');
        if (typeof (generalLedgerAccounts) === 'object')
            this.getGeneralLedgerAccounts(generalLedgerAccounts);
        if (typeof (customer) === 'object')
            this.getCustomer(customer);
        if (typeof (supplier) === 'object')
            this.getSuppliers(supplier);
        if (typeof (product) === 'object')
            this.getProduct(product);
        if (typeof (taxTable) === 'object')
            this.getTaxTable(taxTable);
        return this.masterFilesModel;
    }
    getTaxTable(taxTableMap) {
        const taxTableMapList = taxTableMap.get('taxTableEntry');
        if (typeof (taxTableMapList) === 'object') {
            let taxesTable = new Array();
            if (typeof (taxTableMapList) === 'object') {
                taxTableMapList.forEach(item => {
                    const entries = Object.fromEntries(item);
                    const entryStr = JSON.stringify(entries);
                    const entryModel = JSON.parse(entryStr);
                    taxesTable.push(entryModel);
                });
                let taxTable = new TaxTable_1.TaxTable();
                taxTable.taxTableEntry = taxesTable;
                this.masterFilesModel.taxTable = taxTable;
            }
        }
    }
    getProduct(productsMap) {
        let products = new Array();
        productsMap.forEach(item => {
            const productEntries = Object.fromEntries(item);
            const productStr = JSON.stringify(productEntries);
            const productModel = JSON.parse(productStr);
            products.push(productModel);
        });
        this.masterFilesModel.product = products;
    }
    getSuppliers(suppliersMap) {
        let supplierModelList = new Array();
        suppliersMap.forEach((item) => {
            // Billing address
            const billAddress = item.get('billingAddress');
            const billEntries = Object.fromEntries(billAddress);
            const billStr = JSON.stringify(billEntries);
            const billAddressModel = JSON.parse(billStr);
            // SHIP TO ADDRESS
            const shipAddress = item.get('shipFromAddress');
            const shipEntries = Object.fromEntries(shipAddress);
            const shipStr = JSON.stringify(shipEntries);
            const shipAddressModel = JSON.parse(shipStr);
            // supplier
            const supplierEntries = Object.fromEntries(item);
            const supplierStr = JSON.stringify(supplierEntries);
            let supplierModel = JSON.parse(supplierStr);
            supplierModel.billingAddress = billAddressModel;
            supplierModel.shipFromAddress = shipAddressModel;
            supplierModelList.push(supplierModel);
        });
        this.masterFilesModel.supplier = supplierModelList;
    }
    getGeneralLedgerAccounts(ledgerMap) {
        const accounts = ledgerMap.get('accounts');
    }
    getCustomer(customersMap) {
        let customerModelList = new Array();
        customersMap.forEach((item) => {
            // Billing address
            const billAddress = item.get('billingAddress');
            const billEntries = Object.fromEntries(billAddress);
            const billStr = JSON.stringify(billEntries);
            const billAddressModel = JSON.parse(billStr);
            // SHIP TO ADDRESS
            const shipAddress = item.get('shipToAddress');
            const shipEntries = Object.fromEntries(shipAddress);
            const shipStr = JSON.stringify(shipEntries);
            const shipAddressModel = JSON.parse(shipStr);
            // Customer
            const customerEntries = Object.fromEntries(item);
            const customerStr = JSON.stringify(customerEntries);
            let customerModel = JSON.parse(customerStr);
            customerModel.billingAddress = billAddressModel;
            customerModel.shipToAddress = shipAddressModel;
            customerModelList.push(customerModel);
        });
        this.masterFilesModel.customer = customerModelList;
    }
}
exports.MasterFilesMapToModel = MasterFilesMapToModel;
